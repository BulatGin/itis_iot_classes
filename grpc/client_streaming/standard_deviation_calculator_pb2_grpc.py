# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import standard_deviation_calculator_pb2 as standard__deviation__calculator__pb2


class StandardDeviationCalculatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.calculate_std = channel.stream_unary(
        '/StandardDeviationCalculator/calculate_std',
        request_serializer=standard__deviation__calculator__pb2.Number.SerializeToString,
        response_deserializer=standard__deviation__calculator__pb2.Number.FromString,
        )


class StandardDeviationCalculatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def calculate_std(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StandardDeviationCalculatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'calculate_std': grpc.stream_unary_rpc_method_handler(
          servicer.calculate_std,
          request_deserializer=standard__deviation__calculator__pb2.Number.FromString,
          response_serializer=standard__deviation__calculator__pb2.Number.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'StandardDeviationCalculator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
